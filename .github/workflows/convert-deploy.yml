name: Convert SQLite db to RSS, deploy and notify

on:
  schedule:
    # Runs everyday at:
    # 12:30 AM UTC (GMT0:00) -> 06:15 AM Nepal Time (GMT+5:45)
    # Depends on:
    # https://github.com/sidbelbase/nepstonks/blob/main/.github/workflows/run_workflow.yml#L7
    - cron: "30 00 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  convert:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y sqlite3 python3-pip

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install and configure poetry
        run: |
          pip install -U poetry~=1.0
          poetry config virtualenvs.in-project true

      - name: Cache the virtualenv
        id: poetry-cache
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install Python dependencies
        if: steps.poetry-cache.outputs.cache-hit != 'true'
        run: poetry install --only main

      - name: Download SQLite database
        run: |
          wget https://github.com/sidbelbase/nepstonks/raw/main/nepstonks.db
          chmod +x nepstonks.db
          mkdir -p dist/rss

      - name: Convert table "stock" to RSS feed
        run: |
          sqlite3 -header -json nepstonks.db "SELECT * FROM stock;" > dist/stocks.json
          cat dist/stocks.json | poetry run python src/nepse_rss.py -s > dist/rss/stocks.xml

      - name: Convert table "announcement" to RSS feed
        run: |
          sqlite3 -header -json nepstonks.db "SELECT * FROM announcement;" > dist/announcements.json
          cat dist/announcements.json | poetry run python src/nepse_rss.py -a > dist/rss/announcements.xml

      - name: Upload files as artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  deploy:
    needs: convert
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download files as artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Deploy RSS feeds to `gh-pages` branch
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist/rss

  notify:
    needs: convert
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pip

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install and configure poetry
        run: |
          pip install -U poetry~=1.0
          poetry config virtualenvs.in-project true

      - name: Cache the virtualenv
        id: poetry-cache
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install Python dependencies
        if: steps.poetry-cache.outputs.cache-hit != 'true'
        run: poetry install --only main

      - name: Download files as artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Send notification to Discord
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          cat dist/stocks.json | poetry run python src/notify.py
